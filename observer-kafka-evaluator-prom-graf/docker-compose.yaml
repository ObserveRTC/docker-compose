services:
  observer:
    restart: always
    image: observertc/observer:1.0.0-beta
    ports:
    - 7080:7080
    environment:
    - INITIAL_WAITING_TIME_IN_S=30
    - MICRONAUT_CONFIG_FILES=/observer-config.yaml
    depends_on:
    - kafka
    volumes:
    - ./observer-config/config.yaml:/observer-config.yaml
  evaluator:
    restart: always
    image: observertc/evaluator-js:latest
    ports:
    - 5080:5080
    environment:
    - SERVER_PORT=5080
    - KAFKA_BROKERS=kafka:29092
    - KAFKA_MUX_REPORT_TOPIC_NAME=observertc-reports
    - INITIAL_WAITING_TIME_IN_S=30
    depends_on:
    - kafka
    - observer
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always
  kafka:
    image: confluentinc/cp-kafka:5.5.1
    ports:
    - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
    - zookeeper
    restart: always
  kafka-setup:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka-setup
    command: bash -c ' sleep 20 && cub kafka-ready -b kafka:29092 1 20 && kafka-topics
      --create --if-not-exists --zookeeper zookeeper:2181 --partitions 12 --replication-factor
      1 --topic observertc-reports && kafka-topics --create --if-not-exists --zookeeper
      zookeeper:2181 --partitions 12 --replication-factor 1 --topic observertc-OBSERVER_EVENT
      && kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions
      12 --replication-factor 1 --topic observertc-CALL_EVENT && kafka-topics --create
      --if-not-exists --zookeeper zookeeper:2181 --partitions 12 --replication-factor
      1 --topic observertc-CALL_META_DATA && kafka-topics --create --if-not-exists
      --zookeeper zookeeper:2181 --partitions 12 --replication-factor 1 --topic observertc-CLIENT_EXTENSION_DATA
      && kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions
      12 --replication-factor 1 --topic observertc-PEER_CONNECTION_TRANSPORT && kafka-topics
      --create --if-not-exists --zookeeper zookeeper:2181 --partitions 12 --replication-factor
      1 --topic observertc-PEER_CONNECTION_DATA_CHANNEL && kafka-topics --create --if-not-exists
      --zookeeper zookeeper:2181 --partitions 12 --replication-factor 1 --topic observertc-INBOUND_AUDIO_TRACK
      && kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions
      12 --replication-factor 1 --topic observertc-INBOUND_VIDEO_TRACK && kafka-topics
      --create --if-not-exists --zookeeper zookeeper:2181 --partitions 12 --replication-factor
      1 --topic observertc-OUTBOUND_AUDIO_TRACK && kafka-topics --create --if-not-exists
      --zookeeper zookeeper:2181 --partitions 12 --replication-factor 1 --topic observertc-OUTBOUND_VIDEO_TRACK
      && kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions
      12 --replication-factor 1 --topic observertc-SFU_EVENT && kafka-topics --create
      --if-not-exists --zookeeper zookeeper:2181 --partitions 12 --replication-factor
      1 --topic observertc-SFU_META_DATA && kafka-topics --create --if-not-exists
      --zookeeper zookeeper:2181 --partitions 12 --replication-factor 1 --topic observertc-SFU_TRANSPORT
      && kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions
      12 --replication-factor 1 --topic observertc-SFU_INBOUND_RTP_PAD && kafka-topics
      --create --if-not-exists --zookeeper zookeeper:2181 --partitions 12 --replication-factor
      1 --topic observertc-SFU_OUTBOUND_RTP_PAD && kafka-topics --create --if-not-exists
      --zookeeper zookeeper:2181 --partitions 12 --replication-factor 1 --topic observertc-SFU_SCTP_STREAM
      && sleep 30'
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    depends_on:
    - kafka
  prometheus:
    image: prom/prometheus
    restart: always
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    - --web.console.libraries=/usr/share/prometheus/console_libraries
    - --web.console.templates=/usr/share/prometheus/consoles
    ports:
    - 9090:9090
    volumes:
    - ./prometheus:/etc/prometheus/
    - prometheus_data:/prometheus
    links:
    - cadvisor:cadvisor
    - alertmanager:alertmanager
    depends_on:
    - cadvisor
  node-exporter:
    image: prom/node-exporter
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
    command:
    - --path.procfs=/host/proc
    - --path.sysfs=/host/sys
    - --collector.filesystem.ignored-mount-points
    - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
    - 9100:9100
    restart: always
    deploy:
      mode: global
  alertmanager:
    image: prom/alertmanager
    restart: always
    ports:
    - 9093:9093
    volumes:
    - ./alertmanager/:/etc/alertmanager/
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    ports:
    - 8080:8080
    restart: always
    deploy:
      mode: global
  grafana:
    image: grafana/grafana
    user: '472'
    restart: always
    ports:
    - 3500:3000
    volumes:
    - grafana_data:/var/lib/grafana
    - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
    - ./grafana/config.monitoring
    depends_on:
    - prometheus
version: '3.3'
volumes:
  prometheus_data: {}
  grafana_data: {}
