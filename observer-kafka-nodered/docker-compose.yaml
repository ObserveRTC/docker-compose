version: '3.3'
services:
  observer:
    restart: always
    container_name: docker_observertc_observer
    image: observertc/observer:1.0.0-alpha
    links:
      - kafka
    ports:
      - 7080:7080
    environment:
      - INITIAL_WAITING_TIME_IN_S=30
      - MICRONAUT_CONFIG_FILES=/observer-config.yaml
    depends_on:
      - kafka
    volumes:
      - ./observer-config.yaml:/observer-config.yaml
  zookeeper:
    container_name: docker_zookeeper
    image: confluentinc/cp-zookeeper:5.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    container_name: docker_demo_2_kafka
    image: confluentinc/cp-kafka:5.5.1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: docker_zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://docker_demo_2_kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # This "container" is a workaround to pre-create topics
  kafka-setup:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka-setup
    container_name: docker_kafka_setup
    depends_on:
      - kafka
    command: "bash -c ' cub kafka-ready -b docker_demo_2_kafka:29092 1 20 &&
                        kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 12 --replication-factor 1 --topic ortc_demo_2_reports && \
                        sleep 30'"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  nodered:
    image: nodered/node-red
    container_name: docker_nodered
    ports:
      - 1880:1880
    volumes:
      - ./node_red_data:/data

