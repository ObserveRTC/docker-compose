[
    {
        "id": "ed83ab3a0eb8c0a1",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "80dcfc152b0a3cdf",
        "type": "tab",
        "label": "Flow 2",
        "disabled": true,
        "info": ""
    },
    {
        "id": "58af83d88161a18d",
        "type": "kafkajs-client",
        "name": "",
        "brokers": "docker_demo_3_kafka:29092",
        "clientid": "reader",
        "connectiontimeout": "3000",
        "requesttimeout": "25000",
        "advancedretry": false,
        "maxretrytime": "30000",
        "initialretrytime": "300",
        "factor": "0.2",
        "multiplier": "2",
        "retries": "5",
        "auth": "none",
        "tlsselfsign": false,
        "tlscacert": "",
        "tlsclientcert": "",
        "tlsprivatekey": "",
        "tlspassphrase": "",
        "saslssl": true,
        "saslmechanism": "plain",
        "loglevel": "error"
    },
    {
        "id": "0813cb2f7a99ec67",
        "type": "kafka-broker",
        "name": "",
        "hosts": "docker_demo_3_kafka:29092",
        "selfsign": false,
        "usetls": false,
        "cacert": "",
        "clientcert": "",
        "privatekey": "",
        "passphrase": ""
    },
    {
        "id": "21b32b5901f5cfa9",
        "type": "kafka-broker",
        "name": "Kafka-Reader",
        "hosts": "docker_demo_3_kafka:29092",
        "selfsign": false,
        "usetls": false,
        "cacert": "",
        "clientcert": "",
        "privatekey": "",
        "passphrase": ""
    },
    {
        "id": "153e0558cd460479",
        "type": "prometheus-metric-config",
        "name": "counter",
        "help": "counter help",
        "labels": "",
        "mtype": "counter"
    },
    {
        "id": "7b4e60fd34b5e14e",
        "type": "prometheus-metric-config",
        "name": "started_calls",
        "help": "Tracks the number of started calls",
        "labels": "",
        "mtype": "counter"
    },
    {
        "id": "da1df4daacd5cf5a",
        "type": "kafka-consumer",
        "z": "ed83ab3a0eb8c0a1",
        "name": "",
        "broker": "21b32b5901f5cfa9",
        "outOfRangeOffset": "latest",
        "fromOffset": "earliest",
        "topic": "ortc_demo_3_reports",
        "groupid": "",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "b34c66d25fa1bbe2"
            ]
        ]
    },
    {
        "id": "24b1d46ef5553d92",
        "type": "prometheus-exporter",
        "z": "ed83ab3a0eb8c0a1",
        "name": "/metrics/started_calls",
        "metric": "7b4e60fd34b5e14e",
        "x": 1360,
        "y": 100,
        "wires": []
    },
    {
        "id": "b34c66d25fa1bbe2",
        "type": "report-demuxer",
        "z": "ed83ab3a0eb8c0a1",
        "name": "",
        "reportSource": "",
        "x": 620,
        "y": 220,
        "wires": [
            [],
            [
                "51cafb8335147776",
                "4cf119355f667bac"
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "4cf119355f667bac",
        "type": "debug",
        "z": "ed83ab3a0eb8c0a1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 180,
        "wires": []
    },
    {
        "id": "51cafb8335147776",
        "type": "function",
        "z": "ed83ab3a0eb8c0a1",
        "name": "call_started_inc",
        "func": "const report = msg.payload;\nif (!report || report.name !== \"CALL_STARTED\") {\n    return { \n        payload:  {\n            op: \"inc\",\n            val: 0,\n            // labels: {\n            //     \"tag_1\": \"computer_123\"\n            // }\n        }\n        \n    };\n}\nreturn { \n    payload:  {\n        op: \"inc\",\n        val: 1,\n        // labels: {\n        //     \"tag_1\": \"computer_123\"\n        // }\n    }\n    \n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 100,
        "wires": [
            [
                "24b1d46ef5553d92"
            ]
        ]
    }
]