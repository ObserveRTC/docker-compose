services:
  observer:
    restart: always
    image: observertc/observer:1.0.0-beta
    ports:
    - 7080:7080
    environment:
    - INITIAL_WAITING_TIME_IN_S=30
    - MICRONAUT_CONFIG_FILES=/observer-config.yaml
    depends_on:
    - kafka
    volumes:
    - ./observer-config/config.yaml:/observer-config.yaml
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always
  kafka:
    image: confluentinc/cp-kafka:5.5.1
    ports:
    - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
    - zookeeper
    restart: always
  kafka-setup:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka-setup
    command: bash -c ' sleep 20 && cub kafka-ready -b kafka:29092 1 20 && kafka-topics
      --create --if-not-exists --zookeeper zookeeper:2181 --partitions 12 --replication-factor
      1 --topic observertc-reports && kafka-topics --create --if-not-exists --zookeeper
      zookeeper:2181 --partitions 12 --replication-factor 1 --topic observertc-OBSERVER_EVENT
      && kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions
      12 --replication-factor 1 --topic observertc-CALL_EVENT && kafka-topics --create
      --if-not-exists --zookeeper zookeeper:2181 --partitions 12 --replication-factor
      1 --topic observertc-CALL_META_DATA && kafka-topics --create --if-not-exists
      --zookeeper zookeeper:2181 --partitions 12 --replication-factor 1 --topic observertc-CLIENT_EXTENSION_DATA
      && kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions
      12 --replication-factor 1 --topic observertc-PEER_CONNECTION_TRANSPORT && kafka-topics
      --create --if-not-exists --zookeeper zookeeper:2181 --partitions 12 --replication-factor
      1 --topic observertc-PEER_CONNECTION_DATA_CHANNEL && kafka-topics --create --if-not-exists
      --zookeeper zookeeper:2181 --partitions 12 --replication-factor 1 --topic observertc-INBOUND_AUDIO_TRACK
      && kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions
      12 --replication-factor 1 --topic observertc-INBOUND_VIDEO_TRACK && kafka-topics
      --create --if-not-exists --zookeeper zookeeper:2181 --partitions 12 --replication-factor
      1 --topic observertc-OUTBOUND_AUDIO_TRACK && kafka-topics --create --if-not-exists
      --zookeeper zookeeper:2181 --partitions 12 --replication-factor 1 --topic observertc-OUTBOUND_VIDEO_TRACK
      && kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions
      12 --replication-factor 1 --topic observertc-SFU_EVENT && kafka-topics --create
      --if-not-exists --zookeeper zookeeper:2181 --partitions 12 --replication-factor
      1 --topic observertc-SFU_META_DATA && kafka-topics --create --if-not-exists
      --zookeeper zookeeper:2181 --partitions 12 --replication-factor 1 --topic observertc-SFU_TRANSPORT
      && kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions
      12 --replication-factor 1 --topic observertc-SFU_INBOUND_RTP_PAD && kafka-topics
      --create --if-not-exists --zookeeper zookeeper:2181 --partitions 12 --replication-factor
      1 --topic observertc-SFU_OUTBOUND_RTP_PAD && kafka-topics --create --if-not-exists
      --zookeeper zookeeper:2181 --partitions 12 --replication-factor 1 --topic observertc-SFU_SCTP_STREAM
      && sleep 30'
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    depends_on:
    - kafka
version: '3.3'
